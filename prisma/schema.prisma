generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Role {
  role_id   Int    @id @default(autoincrement())
  nome_role String @unique @map("nome_role") @db.VarChar(50)
  users     User[]

  @@map("role")
}

model User {
  id             Int         @id @default(autoincrement())
  nome           String      @db.VarChar(95)
  esta_bloqueado Boolean     @default(false)
  password_hash  String?     @db.VarChar(255)
  email          String      @unique @db.VarChar(255)
  telefone       String?     @db.VarChar(20)
  codigo_postal  String?     @db.VarChar(8)
  endereco       String?     @db.VarChar(255)
  role_id        Int?
  role           Role?       @relation(fields: [role_id], references: [role_id], onDelete: SetNull, onUpdate: Cascade)
  tokens         TokenPass[]
  registros      Registro[]
  casos          Caso[]

  @@map("utilizador")
}

model Cliente {
  id           Int    @id @default(autoincrement())
  nome         String @db.VarChar(100)
  email        String @unique @db.VarChar(255)
  telefone     String @db.VarChar(20)
  codigoPostal String @db.VarChar(10)
  endereco     String @db.VarChar(255)
  casos        Caso[]

  @@map("cliente")
}

model TokenPass {
  id      Int    @id @default(autoincrement())
  token   String @unique @default(cuid()) @db.VarChar(25)
  user_id Int
  user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Registro {
  id        Int      @id @default(autoincrement())
  resumo    String   @db.VarChar(255)
  descricao String?  @db.Text
  tipo      String   @db.VarChar(50)
  criado_em DateTime @default(now())
  user_id   Int
  caso_id   Int
  user      User     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  caso      Caso     @relation(fields: [caso_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("registro")
}

model CasoEstado {
  id Int    @id @default(autoincrement())
  nome_estado    String @unique @map("nome_role") @db.VarChar(50)
  casos          Caso[]

  @@map("casoestado")
}

model Caso {
  id        Int      @id @default(autoincrement())
  processo  String   @unique @db.VarChar(50)
  resumo    String   @db.VarChar(100)
  descricao String?  @db.Text
  criado_em DateTime @default(now())

  cliente_id Int
  cliente    Cliente @relation(fields: [cliente_id], references: [id])

  user_id Int
  user    User @relation(fields: [user_id], references: [id])

  estado_id Int @default(1)
  estado    CasoEstado @relation(fields: [estado_id], references: [id])

  registros Registro[]

  @@map("caso")
}
